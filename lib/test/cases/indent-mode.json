[
  {
    "in": {
      "fileLineNo": 6,
      "text": "(defn foo\n  [arg\n  ret"
    },
    "out": {
      "fileLineNo": 12,
      "text": "(defn foo\n  [arg]\n  ret)"
    }
  },
  {
    "in": {
      "fileLineNo": 20,
      "text": "(defn foo\n  [arg\n   ret"
    },
    "out": {
      "fileLineNo": 26,
      "text": "(defn foo\n  [arg\n   ret])"
    }
  },
  {
    "in": {
      "fileLineNo": 34,
      "text": "(defn foo\n[arg\n   ret"
    },
    "out": {
      "fileLineNo": 40,
      "text": "(defn foo)\n[arg\n   ret]"
    }
  },
  {
    "in": {
      "fileLineNo": 48,
      "text": "(defn foo\n[arg\nret"
    },
    "out": {
      "fileLineNo": 54,
      "text": "(defn foo)\n[arg]\nret"
    }
  },
  {
    "in": {
      "fileLineNo": 62,
      "text": "(defn foo\n  [arg\n  ret\n\n(defn foo\n  [arg\n  ret"
    },
    "out": {
      "fileLineNo": 72,
      "text": "(defn foo\n  [arg]\n  ret)\n\n(defn foo\n  [arg]\n  ret)"
    }
  },
  {
    "in": {
      "fileLineNo": 86,
      "text": "bar)"
    },
    "out": {
      "fileLineNo": 90,
      "text": "bar"
    }
  },
  {
    "in": {
      "fileLineNo": 96,
      "text": "(def foo [a b]]"
    },
    "out": {
      "fileLineNo": 100,
      "text": "(def foo [a b])"
    }
  },
  {
    "in": {
      "fileLineNo": 106,
      "text": "(let [x {:foo 1 :bar 2]\n  x)"
    },
    "out": {
      "fileLineNo": 111,
      "text": "(let [x {:foo 1 :bar 2}]\n  x)"
    }
  },
  {
    "in": {
      "fileLineNo": 118,
      "text": "(foo [a (|b] c)"
    },
    "out": {
      "fileLineNo": 122,
      "text": "(foo [a (|b] c)\n           ^ error: unmatched-close-paren"
    }
  },
  {
    "in": {
      "fileLineNo": 131,
      "text": "(def foo \"as"
    },
    "out": {
      "fileLineNo": 135,
      "text": "(def foo \"as\n         ^ error: unclosed-quote"
    }
  },
  {
    "in": {
      "fileLineNo": 142,
      "text": "(defn foo [a \"])"
    },
    "out": {
      "fileLineNo": 146,
      "text": "(defn foo [a \"])\n             ^ error: unclosed-quote"
    }
  },
  {
    "in": {
      "fileLineNo": 153,
      "text": "(defn foo\n  \"This is docstring.\n  Line 2 here.\"\n  ret"
    },
    "out": {
      "fileLineNo": 160,
      "text": "(defn foo\n  \"This is docstring.\n  Line 2 here.\"\n  ret)"
    }
  },
  {
    "in": {
      "fileLineNo": 169,
      "text": "(let [a \"Hello\nWorld\"\n      b 2\n  ret"
    },
    "out": {
      "fileLineNo": 176,
      "text": "(let [a \"Hello\nWorld\"\n      b 2]\n  ret)"
    }
  },
  {
    "in": {
      "fileLineNo": 185,
      "text": "(let [a \"])\"\n      b 2"
    },
    "out": {
      "fileLineNo": 190,
      "text": "(let [a \"])\"\n      b 2])"
    }
  },
  {
    "in": {
      "fileLineNo": 197,
      "text": "(def foo \"\\\"\""
    },
    "out": {
      "fileLineNo": 201,
      "text": "(def foo \"\\\"\")"
    }
  },
  {
    "in": {
      "fileLineNo": 208,
      "text": "()\"\n\""
    },
    "out": {
      "fileLineNo": 213,
      "text": "()\"\n\""
    }
  },
  {
    "in": {
      "fileLineNo": 227,
      "text": "\"|\"foo\""
    },
    "out": {
      "fileLineNo": 231,
      "text": "\"|\"foo\"\n      ^ error: unclosed-quote"
    }
  },
  {
    "in": {
      "fileLineNo": 238,
      "text": "(def foo\n  \"|\n  \"(a b)\n      c\")"
    },
    "out": {
      "fileLineNo": 245,
      "text": "(def foo\n  \"|\n  \"(a b)\n      c\")\n       ^ error: unclosed-quote"
    }
  },
  {
    "in": {
      "fileLineNo": 262,
      "text": "(for [col columns]\n  \"|\n  [:div.td {:style \"max-width: 500px;\"}])"
    },
    "out": {
      "fileLineNo": 268,
      "text": "(for [col columns]\n  \"|\n  [:div.td {:style \"max-width: 500px;\"}])\n                                     ^ error: quote-danger"
    }
  },
  {
    "in": {
      "fileLineNo": 279,
      "text": "(def foo [a b]\n  ; \"my multiline\n  ; docstring.\"\nret)"
    },
    "out": {
      "fileLineNo": 286,
      "text": "(def foo [a b])\n  ; \"my multiline\n  ; docstring.\"\nret"
    }
  },
  {
    "in": {
      "fileLineNo": 295,
      "text": "(def foo [a b]\n  ; \"\"\\\"\nret)"
    },
    "out": {
      "fileLineNo": 301,
      "text": "(def foo [a b])\n  ; \"\"\\\"\nret"
    }
  },
  {
    "in": {
      "fileLineNo": 311,
      "text": "(defn foo [a b\n  \\[\n  ret"
    },
    "out": {
      "fileLineNo": 317,
      "text": "(defn foo [a b]\n  \\[\n  ret)"
    }
  },
  {
    "in": {
      "fileLineNo": 323,
      "text": "(defn foo [a b]\n  ret\\)"
    },
    "out": {
      "fileLineNo": 328,
      "text": "(defn foo [a b]\n  ret\\))"
    }
  },
  {
    "in": {
      "fileLineNo": 333,
      "text": "{:tag-open \\[ :tag-close \\]}\n{:tag-open \\[ :tag-close \\]}"
    },
    "out": {
      "fileLineNo": 338,
      "text": "{:tag-open \\[ :tag-close \\]}\n{:tag-open \\[ :tag-close \\]}"
    }
  },
  {
    "in": {
      "fileLineNo": 346,
      "text": "(def foo \\;"
    },
    "out": {
      "fileLineNo": 350,
      "text": "(def foo \\;)"
    }
  },
  {
    "in": {
      "fileLineNo": 356,
      "text": "(def foo \\,\n(def bar \\ ; <-- space"
    },
    "out": {
      "fileLineNo": 361,
      "text": "(def foo \\,)\n(def bar \\ ); <-- space"
    }
  },
  {
    "in": {
      "fileLineNo": 368,
      "text": "(foo [a b\\\n  c)"
    },
    "out": {
      "fileLineNo": 373,
      "text": "(foo [a b\\\n         ^ error: eol-backslash\n  c)"
    }
  },
  {
    "in": {
      "fileLineNo": 384,
      "text": "(def foo ;)"
    },
    "out": {
      "fileLineNo": 388,
      "text": "(def foo) ;)"
    }
  },
  {
    "in": {
      "fileLineNo": 395,
      "text": "(let [a 1\n      b 2\n      c {:foo 1\n         ;; :bar 2}]\n  ret)"
    },
    "out": {
      "fileLineNo": 403,
      "text": "(let [a 1\n      b 2\n      c {:foo 1}]\n         ;; :bar 2}]\n  ret)"
    }
  },
  {
    "in": {
      "fileLineNo": 413,
      "text": "(let [a 1 ;; a comment\n  ret)"
    },
    "out": {
      "fileLineNo": 418,
      "text": "(let [a 1] ;; a comment\n  ret)"
    }
  },
  {
    "in": {
      "fileLineNo": 425,
      "text": "; hello \\n world"
    },
    "out": {
      "fileLineNo": 429,
      "text": "; hello \\n world"
    }
  },
  {
    "in": {
      "fileLineNo": 442,
      "text": "(def b |)"
    },
    "out": {
      "fileLineNo": 446,
      "text": "(def b |)"
    }
  },
  {
    "in": {
      "fileLineNo": 452,
      "text": "(def b )"
    },
    "out": {
      "fileLineNo": 456,
      "text": "(def b)"
    }
  },
  {
    "in": {
      "fileLineNo": 462,
      "text": "(def b [[c d] |])"
    },
    "out": {
      "fileLineNo": 466,
      "text": "(def b [[c d] |])"
    }
  },
  {
    "in": {
      "fileLineNo": 472,
      "text": "(def b [[c d] ])"
    },
    "out": {
      "fileLineNo": 476,
      "text": "(def b [[c d]])"
    }
  },
  {
    "in": {
      "fileLineNo": 483,
      "text": "(def |b [[c d] ])"
    },
    "out": {
      "fileLineNo": 487,
      "text": "(def |b [[c d]])"
    }
  },
  {
    "in": {
      "fileLineNo": 499,
      "text": "(let [a 1])\n  ret)"
    },
    "out": {
      "fileLineNo": 504,
      "text": "(let [a 1]\n  ret)"
    }
  },
  {
    "in": {
      "fileLineNo": 511,
      "text": "(let [a 1])|\n  ret)"
    },
    "out": {
      "fileLineNo": 516,
      "text": "(let [a 1])|\n  ret"
    }
  },
  {
    "in": {
      "fileLineNo": 524,
      "text": "(let [a 1]) 2\n  ret"
    },
    "out": {
      "fileLineNo": 529,
      "text": "(let [a 1]) 2\n  ret"
    }
  },
  {
    "in": {
      "fileLineNo": 537,
      "text": "(let [a 1]|)\n  ret)"
    },
    "out": {
      "fileLineNo": 542,
      "text": "(let [a 1]|\n  ret)"
    }
  },
  {
    "in": {
      "fileLineNo": 549,
      "text": "(let [a 1]) ;|\n  ret"
    },
    "out": {
      "fileLineNo": 554,
      "text": "(let [a 1] ;|\n  ret)"
    }
  },
  {
    "in": {
      "fileLineNo": 567,
      "text": "(let [a 1\n      |])"
    },
    "out": {
      "fileLineNo": 572,
      "text": "(let [a 1\n      |])"
    }
  },
  {
    "in": {
      "fileLineNo": 579,
      "text": "(let [a 1\n      ]); <-- spaces"
    },
    "out": {
      "fileLineNo": 584,
      "text": "(let [a 1])\n      ; <-- spaces"
    }
  },
  {
    "in": {
      "fileLineNo": 592,
      "text": "(let [a 1\n      |] (+ a 2))"
    },
    "out": {
      "fileLineNo": 597,
      "text": "(let [a 1\n      |] (+ a 2))"
    }
  },
  {
    "in": {
      "fileLineNo": 606,
      "text": "(let [a 1\n      ] (+ a 2))"
    },
    "out": {
      "fileLineNo": 611,
      "text": "(let [a 1]\n     (+ a 2))"
    }
  },
  {
    "in": {
      "fileLineNo": 620,
      "text": "(let [a 1\n  |] (+ a 2))"
    },
    "out": {
      "fileLineNo": 625,
      "text": "(let [a 1\n      |] (+ a 2))"
    }
  },
  {
    "in": {
      "fileLineNo": 633,
      "text": "(let [a 1\n      ]|)"
    },
    "out": {
      "fileLineNo": 638,
      "text": "(let [a 1]\n     |)"
    }
  },
  {
    "in": {
      "fileLineNo": 645,
      "text": "(foo\n  }|)"
    },
    "out": {
      "fileLineNo": 650,
      "text": "(foo\n  }|)\n  ^ error: unmatched-close-paren"
    }
  },
  {
    "in": {
      "fileLineNo": 658,
      "text": "(foo\n  ) foo} bar|"
    },
    "out": {
      "fileLineNo": 663,
      "text": "(foo\n  ) foo} bar|\n       ^ error: unmatched-close-paren"
    }
  },
  {
    "in": {
      "fileLineNo": 669,
      "text": "(foo\n  ) (bar|"
    },
    "out": {
      "fileLineNo": 674,
      "text": "(foo\n  ) (bar|\n    ^ error: unclosed-paren"
    }
  },
  {
    "in": {
      "fileLineNo": 689,
      "text": "(foo [bar (|...] baz)"
    },
    "out": {
      "fileLineNo": 693,
      "text": "(foo [bar (|...] baz)\n               ^ error: unmatched-close-paren"
    }
  },
  {
    "in": {
      "fileLineNo": 700,
      "text": "(foo [bar (]| baz)])"
    },
    "out": {
      "fileLineNo": 704,
      "text": "(foo [bar (]| baz)])\n           ^ error: unmatched-close-paren"
    }
  },
  {
    "in": {
      "fileLineNo": 712,
      "text": "[... (foo [bar ]| baz]  ...)]"
    },
    "out": {
      "fileLineNo": 716,
      "text": "[... (foo [bar ]| baz]  ...)]\n                     ^ error: unmatched-close-paren"
    }
  },
  {
    "in": {
      "fileLineNo": 723,
      "text": "(let [{:keys |foo bar]} my-map])"
    },
    "out": {
      "fileLineNo": 727,
      "text": "(let [{:keys |foo bar]} my-map])\n                     ^ error: unmatched-close-paren"
    }
  },
  {
    "in": {
      "fileLineNo": 734,
      "text": "(a (b (c))| d) e)"
    },
    "out": {
      "fileLineNo": 738,
      "text": "(a (b (c))| d) e"
    }
  },
  {
    "in": {
      "fileLineNo": 744,
      "text": "(a (b (c(|) d) e)"
    },
    "out": {
      "fileLineNo": 748,
      "text": "(a (b (c(|) d) e))"
    }
  },
  {
    "in": {
      "fileLineNo": 754,
      "text": "(f [x (a (b c(|) d) y] g)"
    },
    "out": {
      "fileLineNo": 758,
      "text": "(f [x (a (b c(|) d) y] g)\n                     ^ error: unmatched-close-paren"
    }
  },
  {
    "in": {
      "fileLineNo": 766,
      "text": "(foo\n  bar)| baz) qux"
    },
    "out": {
      "fileLineNo": 771,
      "text": "(foo\n  bar)| baz) qux\n           ^ error: unmatched-close-paren"
    }
  },
  {
    "in": {
      "fileLineNo": 777,
      "text": "(foo\n  [bar\n   bar)| baz\n   bar])"
    },
    "out": {
      "fileLineNo": 784,
      "text": "(foo\n  [bar\n   bar)| baz\n      ^ error: unmatched-close-paren\n   bar])"
    }
  },
  {
    "in": {
      "fileLineNo": 794,
      "text": "(foo\n  [bar]\n|bar) baz"
    },
    "out": {
      "fileLineNo": 800,
      "text": "(foo\n  [bar]\n|bar) baz\n    ^ error: unmatched-close-paren"
    }
  },
  {
    "in": {
      "fileLineNo": 810,
      "text": "(foo\n [bar]\n  |bar) baz"
    },
    "out": {
      "fileLineNo": 816,
      "text": "(foo\n [bar]\n  |bar) baz\n      ^ error: unmatched-close-paren"
    }
  },
  {
    "in": {
      "fileLineNo": 825,
      "text": "(foo\n [bar\n bar]) baz"
    },
    "out": {
      "fileLineNo": 831,
      "text": "(foo\n [bar\n bar]) baz\n    ^ error: unmatched-close-paren"
    }
  },
  {
    "in": {
      "fileLineNo": 842,
      "text": "(foo bar ;|)"
    },
    "out": {
      "fileLineNo": 846,
      "text": "(foo bar) ;|)"
    }
  },
  {
    "in": {
      "fileLineNo": 852,
      "text": "(let [x 1\n      y 2;|])"
    },
    "out": {
      "fileLineNo": 857,
      "text": "(let [x 1\n      y 2]);|])"
    }
  },
  {
    "in": {
      "fileLineNo": 864,
      "text": "(|"
    },
    "out": {
      "fileLineNo": 868,
      "text": "(|)"
    }
  },
  {
    "in": {
      "fileLineNo": 878,
      "text": "(def x [1 2 3])\n(def y 2)\n|"
    },
    "out": {
      "fileLineNo": 884,
      "text": "(def x [1 2 3])\n(def y 2)\n^ tabStop\n|"
    }
  },
  {
    "in": {
      "fileLineNo": 891,
      "text": "(let [a {:foo 1}\n      |\n      bar [1 2 3]]\n  bar)"
    },
    "out": {
      "fileLineNo": 898,
      "text": "(let [a {:foo 1}\n^    ^  ^ tabStops\n      |\n      bar [1 2 3]]\n  bar)"
    }
  },
  {
    "in": {
      "fileLineNo": 907,
      "text": "(let [a {:foo 1}\n      bar [1 2 3]]\n  |\n  bar)"
    },
    "out": {
      "fileLineNo": 914,
      "text": "(let [a {:foo 1}\n      bar [1 2 3]]\n^    ^    ^ tabStops\n  |\n  bar)"
    }
  }
]
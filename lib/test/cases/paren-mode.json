[
  {
    "in": {
      "fileLineNo": 6,
      "text": "(let [foo 1]\nfoo)"
    },
    "out": {
      "fileLineNo": 11,
      "text": "(let [foo 1]\n foo)"
    }
  },
  {
    "in": {
      "fileLineNo": 18,
      "text": "(let [foo 1]\n      foo)"
    },
    "out": {
      "fileLineNo": 23,
      "text": "(let [foo 1]\n     foo)"
    }
  },
  {
    "in": {
      "fileLineNo": 28,
      "text": "(let [foo {:a 1}]\n           foo)"
    },
    "out": {
      "fileLineNo": 33,
      "text": "(let [foo {:a 1}]\n     foo)"
    }
  },
  {
    "in": {
      "fileLineNo": 40,
      "text": "(let [foo 1]\n      foo)\n\n(let [foo 1]\nfoo)"
    },
    "out": {
      "fileLineNo": 48,
      "text": "(let [foo 1]\n     foo)\n\n(let [foo 1]\n foo)"
    }
  },
  {
    "in": {
      "fileLineNo": 60,
      "text": "(let [foo [1 2 3]]\n      (-> foo\n          (map inc)))"
    },
    "out": {
      "fileLineNo": 66,
      "text": "(let [foo [1 2 3]]\n     (-> foo\n         (map inc)))"
    }
  },
  {
    "in": {
      "fileLineNo": 78,
      "text": "(let [foo 1\n      ]; <-- spaces\n  foo)"
    },
    "out": {
      "fileLineNo": 84,
      "text": "(let [foo 1]\n      ; <-- spaces\n  foo)"
    }
  },
  {
    "in": {
      "fileLineNo": 90,
      "text": "(let [foo 1\n      bar 2\n\n     ] (+ foo bar\n  ); <-- spaces\n)"
    },
    "out": {
      "fileLineNo": 99,
      "text": "(let [foo 1\n      bar 2]\n\n     (+ foo bar))\n  ; <-- spaces\n"
    }
  },
  {
    "in": {
      "fileLineNo": 112,
      "text": "(def x [1 2 3 4\n         5 6 7 8])"
    },
    "out": {
      "fileLineNo": 117,
      "text": "(def x [1 2 3 4\n         5 6 7 8])"
    }
  },
  {
    "in": {
      "fileLineNo": 124,
      "text": "  (assoc x\n:foo 1\n     :bar 2)"
    },
    "out": {
      "fileLineNo": 130,
      "text": "  (assoc x\n   :foo 1\n     :bar 2)"
    }
  },
  {
    "in": {
      "fileLineNo": 138,
      "text": "(foo"
    },
    "out": {
      "fileLineNo": 142,
      "text": "(foo\n^ error: unclosed-paren"
    }
  },
  {
    "in": {
      "fileLineNo": 147,
      "text": "(defn foo\n[arg arg2\nbar"
    },
    "out": {
      "fileLineNo": 153,
      "text": "(defn foo\n[arg arg2\n^ error: unclosed-paren\nbar"
    }
  },
  {
    "in": {
      "fileLineNo": 162,
      "text": "(foo})"
    },
    "out": {
      "fileLineNo": 166,
      "text": "(foo})\n    ^ error: unmatched-close-paren"
    }
  },
  {
    "in": {
      "fileLineNo": 171,
      "text": "(foo\n  })"
    },
    "out": {
      "fileLineNo": 176,
      "text": "(foo\n  })\n  ^ error: unmatched-close-paren"
    }
  },
  {
    "in": {
      "fileLineNo": 182,
      "text": "(defn foo\n  [arg\n  bar)"
    },
    "out": {
      "fileLineNo": 188,
      "text": "(defn foo\n  [arg\n  bar)\n     ^ error: unmatched-close-paren"
    }
  },
  {
    "in": {
      "fileLineNo": 199,
      "text": "; hello \\n world"
    },
    "out": {
      "fileLineNo": 203,
      "text": "; hello \\n world"
    }
  },
  {
    "in": {
      "fileLineNo": 209,
      "text": "(def foo \\,)\n(def bar \\ )"
    },
    "out": {
      "fileLineNo": 214,
      "text": "(def foo \\,)\n(def bar \\ )"
    }
  },
  {
    "in": {
      "fileLineNo": 221,
      "text": "(foo [a b]\\\nc)"
    },
    "out": {
      "fileLineNo": 226,
      "text": "(foo [a b]\\\n          ^ error: eol-backslash\nc)"
    }
  },
  {
    "in": {
      "fileLineNo": 234,
      "text": "(def foo\n  \"hello\n  bar)"
    },
    "out": {
      "fileLineNo": 240,
      "text": "(def foo\n  \"hello\n  ^ error: unclosed-quote\n  bar)"
    }
  },
  {
    "in": {
      "fileLineNo": 251,
      "text": "(def foo [a b]\n  ; \"my string\nret)"
    },
    "out": {
      "fileLineNo": 257,
      "text": "(def foo [a b]\n  ; \"my string\n    ^ error: quote-danger\nret)"
    }
  },
  {
    "in": {
      "fileLineNo": 266,
      "text": "(def foo [a b]\n  ; \"my multiline\n  ; docstring.\"\nret)"
    },
    "out": {
      "fileLineNo": 273,
      "text": "(def foo [a b]\n  ; \"my multiline\n  ; docstring.\"\n ret)"
    }
  },
  {
    "in": {
      "fileLineNo": 285,
      "text": "( )\"\n\""
    },
    "out": {
      "fileLineNo": 290,
      "text": "( )\"\n\""
    }
  },
  {
    "in": {
      "fileLineNo": 300,
      "text": "(foo |)"
    },
    "out": {
      "fileLineNo": 304,
      "text": "(foo |)"
    }
  },
  {
    "in": {
      "fileLineNo": 308,
      "text": "(foo [1 2 3 |] )"
    },
    "out": {
      "fileLineNo": 312,
      "text": "(foo [1 2 3 |] )"
    }
  },
  {
    "in": {
      "fileLineNo": 318,
      "text": "(foo )"
    },
    "out": {
      "fileLineNo": 322,
      "text": "(foo)"
    }
  },
  {
    "in": {
      "fileLineNo": 326,
      "text": "(foo [1 2 3 ] )"
    },
    "out": {
      "fileLineNo": 330,
      "text": "(foo [1 2 3])"
    }
  },
  {
    "in": {
      "fileLineNo": 338,
      "text": "(foo [a b\n|])"
    },
    "out": {
      "fileLineNo": 343,
      "text": "(foo [a b\n      |])"
    }
  },
  {
    "in": {
      "fileLineNo": 350,
      "text": "(foo [1 2 3\n 4 5 6\n 7 8 9])|"
    },
    "out": {
      "fileLineNo": 356,
      "text": "(foo [1 2 3\n      4 5 6\n      7 8 9])|"
    }
  },
  {
    "in": {
      "fileLineNo": 366,
      "text": "(let |[foo 1\n     ^ cursorDx -4\n           bar 2\n           baz 3])"
    },
    "out": {
      "fileLineNo": 373,
      "text": "(let |[foo 1\n       bar 2\n       baz 3])"
    }
  },
  {
    "in": {
      "fileLineNo": 379,
      "text": "|(def foo\n^ cursorDx -3\n      bar)"
    },
    "out": {
      "fileLineNo": 385,
      "text": "|(def foo\n   bar)"
    }
  },
  {
    "in": {
      "fileLineNo": 392,
      "text": "(def foo |(bar\n         ^ cursorDx 5\n       4 5 6\n       7 8 9))"
    },
    "out": {
      "fileLineNo": 399,
      "text": "(def foo |(bar\n            4 5 6\n            7 8 9))"
    }
  }
]